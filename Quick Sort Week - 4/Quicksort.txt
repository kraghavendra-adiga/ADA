#include <stdio.h>
#include <time.h>
#include <stdlib.h>

int partition(int arr[], int low, int high)
{
    int pivot = arr[low];
    int i = low;
    int j = high;

    while (i < j)
    {
        while (arr[i] <= pivot && i < high)
        {
            i++;
        }

        while (arr[j] > pivot && j > low)
        {
            j--;
        }

        if (i < j)
        {
            int temp = arr[i];
            arr[i] = arr[j];
            arr[j] = temp;
        }
    }
    int temp = arr[low];
    arr[low] = arr[j];
    arr[j] = temp;
    return j;
}

void quicksort(int arr[], int low, int high)
{
    if (low < high)
    {
        int pc = partition(arr, low, high);
        quicksort(arr, low, pc - 1);
        quicksort(arr, pc + 1, high);
    }
}

void print(int arr[], int n)
{
    for (int i = 0; i < n; i++)
    {
        printf("%d ", arr[i]);
    }
    printf("\n");
}

int main()
{
    int n, ch = 1, arr[1000];
    clock_t start, end;

    srand(time(NULL));

    while (ch)
    {
        printf("Enter the number of elements: ");
        scanf("%d", &n);

        for (int i = 0; i < n; i++)
        {
            arr[i] = rand() % 200;
        }

        printf("The random generated array is:\n");
        print(arr, n);

        start = clock();
        quicksort(arr, 0, n - 1);
        end = clock();

        printf("The sorted array elements are:\n");
        print(arr, n);

        double time_taken = (double)(end - start) / CLOCKS_PER_SEC;
        printf("Time taken = %f seconds\n", time_taken);

        printf("Do you wish to continue (0/1)? ");
        scanf("%d", &ch);
    }

    return 0;
}
