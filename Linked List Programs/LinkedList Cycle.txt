/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode detectCycle(ListNode head) {
        if(head==null) return null;
        if(head.next==null) return null;
        int flag = 0;
        ListNode slow = head;
        ListNode fast = head;
        int n=0;
        while(fast!=null && slow!=null && fast.next!=null){
            if(slow==fast && n!=0){
                flag =1;
                break;
            }
            slow=slow.next;
            fast=fast.next.next;
            n++;
        }
        if(flag==0) return null;
        ListNode curr = head;
        while(curr!=slow){
            curr=curr.next;
            slow=slow.next;
        }
        return curr;
    }
}