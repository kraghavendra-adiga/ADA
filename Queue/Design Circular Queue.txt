class MyCircularQueue {
    int[] q;
    int count;
    int rear;
    int front;
    int size;
    public MyCircularQueue(int k) {
        q = new int[k];
        count=0;
        rear = -1;
        front =0;
        size = k;
    }
    
    public boolean enQueue(int value) {
        if(count==size) return false;;
        rear+=1;
        rear%=size;
        count++;
        q[rear] = value;
        return true;
    }
    
    public boolean deQueue() {
        if(count==0) return false;
        front+=1;
        front%=size;
        count--;
        return true;
    }
    
    public int Front() {
        if(count==0) return -1;
       return q[front]; 
    }
    
    public int Rear() {
        if(count==0) return -1;
        return q[rear];
    }
    
    public boolean isEmpty() {
        if(count==0) return true;
        else return false;
    }
    
    public boolean isFull() {
        if(count==size) return true;
        else return false;
    }
}

/**
 * Your MyCircularQueue object will be instantiated and called as such:
 * MyCircularQueue obj = new MyCircularQueue(k);
 * boolean param_1 = obj.enQueue(value);
 * boolean param_2 = obj.deQueue();
 * int param_3 = obj.Front();
 * int param_4 = obj.Rear();
 * boolean param_5 = obj.isEmpty();
 * boolean param_6 = obj.isFull();
 */